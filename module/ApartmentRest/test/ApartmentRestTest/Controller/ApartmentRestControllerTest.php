<?php

namespace ApartmentRest\Controller;

use ApartmentRestTest\Bootstrap;
use ApartmentRest\Controller\ApartmentRestController;
use Zend\Http\Request;
use Zend\Http\Response;
use Zend\Mvc\MvcEvent;
use Zend\Mvc\Router\RouteMatch;
use Zend\Mvc\Router\Http\TreeRouteStack as HttpRouter;
use PHPUnit_Framework_TestCase;

/**
 * Test class for ApartmentRestController.
 * Generated by PHPUnit on 2013-10-30 at 11:20:47.
 */
class AlbumRestControllerTest extends PHPUnit_Framework_TestCase {
	protected $controller;
	protected $request;
	protected $response;
	protected $routeMatch;
	protected $event;
	protected function setUp() {
		$serviceManager = Bootstrap::getServiceManager ();
		$this->controller = new ApartmentRestController ();
		$this->request = new Request ();
		$this->routeMatch = new RouteMatch ( array (
				'controller' => 'index' 
		) );
		$this->event = new MvcEvent ();
		$config = $serviceManager->get ( 'Config' );
		$routerConfig = isset ( $config ['router'] ) ? $config ['router'] : array ();
		$router = HttpRouter::factory ( $routerConfig );
		$this->event->setRouter ( $router );
		$this->event->setRouteMatch ( $this->routeMatch );
		$this->controller->setEvent ( $this->event );
		$this->controller->setServiceLocator ( $serviceManager );
	}
	
	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {
	}
	
	/**
	 *
	 * @todo Implement testGetList().
	 */
	public function testGetList() {
		$result = $this->controller->getList ();
		
		// Wird ein JSON Model zurückgegeben?
		$this->assertInstanceOf ( 'Zend\View\Model\JsonModel', $result );
		
		// Haben wir einen Inhalt?
		$this->assertTrue ( $result->__isset ( 'inhalt' ) );
		
		// Steht da 'hallo' drin?
		$this->assertEquals ( 'hallo', $result->__get ( 'inhalt' ) ); 
	}
	public function testGetListCanBeAccessed() {
		$result = $this->controller->dispatch ( $this->request );
		$response = $this->controller->getResponse ();
		
		$this->assertEquals ( 200, $response->getStatusCode () );
	}
	
	/**
	 *
	 * @todo Implement testGet().
	 */
	public function testGet() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete ( 'This test has not been implemented yet.' );
	}
	
	/**
	 *
	 * @todo Implement testCreate().
	 */
	public function testCreate() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete ( 'This test has not been implemented yet.' );
	}
	
	/**
	 *
	 * @todo Implement testUpdate().
	 */
	public function testUpdate() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete ( 'This test has not been implemented yet.' );
	}
	
	/**
	 *
	 * @todo Implement testDelete().
	 */
	public function testDelete() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete ( 'This test has not been implemented yet.' );
	}
}
?>
